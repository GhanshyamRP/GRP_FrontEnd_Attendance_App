{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.userurl = \"http://localhost:8080/user\";\n    this.loginurl = \"http://localhost:8080/login\";\n    this.atturl = \"http://localhost:8080/attendence\";\n  }\n  addUser(user) {\n    return this.http.post(this.userurl + \"/add\", user);\n  }\n  login(log) {\n    return this.http.post(this.loginurl, log);\n  }\n  gettodaydata(id) {\n    return this.http.get(this.atturl + \"/\" + id);\n  }\n  getmydata(id) {\n    return this.http.get(this.atturl + \"/list/\" + id);\n  }\n  updatesignintime(x) {\n    let id = sessionStorage.getItem('id');\n    return this.http.put(this.atturl + \"/updateSignIn/\" + id, x);\n  }\n  updatesignOuttime(x) {\n    let id = sessionStorage.getItem('id');\n    return this.http.put(this.atturl + \"/updateSignOut/\" + id, x);\n  }\n  getalluser() {\n    return this.http.get(this.userurl + \"/list\");\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DataService","constructor","http","userurl","loginurl","atturl","addUser","user","post","login","log","gettodaydata","id","get","getmydata","updatesignintime","x","sessionStorage","getItem","put","updatesignOuttime","getalluser","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["F:\\PROFFESIONAL DOCS\\MY - Coding\\my language\\Jforce Sol\\attendanceApp\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Login } from '../class/login';\nimport { Observable } from 'rxjs';\nimport { User } from '../class/user';\nimport { Err } from '../class/err';\nimport { HttpClient } from '@angular/common/http';\nimport { Attendence } from '../class/attendence';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  \n  private userurl:string = \"http://localhost:8080/user\";\n  private loginurl:string = \"http://localhost:8080/login\";\n  private atturl:string = \"http://localhost:8080/attendence\";\n\n  constructor(private http:HttpClient){}\n\n  public addUser(user:any){\n      return this.http.post(this.userurl+\"/add\",user);\n  }\n\n  public login(log:Login):Observable<User | Err>{\n        return this.http.post<User |  Err>(this.loginurl,log);\n  }\n\n  public gettodaydata(id:any):Observable<Attendence>{\n      return this.http.get<Attendance>(this.atturl+\"/\"+id)\n  }\n\n  public getmydata(id:any):Observable<Attendence[]>{\n    return this.http.get<Attendance[]>(this.atturl+\"/list/\"+id)\n  }\n\n  public updatesignintime(x: any){\n    let id = sessionStorage.getItem('id');\n    return this.http.put(this.atturl+\"/updateSignIn/\"+id, x);\n  }\n\n  public updatesignOuttime(x: any){\n    let id = sessionStorage.getItem('id');\n    return this.http.put(this.atturl+\"/updateSignOut/\"+id, x);\n  }\n\n  public getalluser():Observable<User[]>{\n    return this.http.get<User[]>(this.userurl+\"/list\")\n  }\n\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,WAAW;EAMtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,OAAO,GAAU,4BAA4B;IAC7C,KAAAC,QAAQ,GAAU,6BAA6B;IAC/C,KAAAC,MAAM,GAAU,kCAAkC;EAErB;EAE9BC,OAAOA,CAACC,IAAQ;IACnB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,OAAO,GAAC,MAAM,EAACI,IAAI,CAAC;EACnD;EAEOE,KAAKA,CAACC,GAAS;IAChB,OAAO,IAAI,CAACR,IAAI,CAACM,IAAI,CAAc,IAAI,CAACJ,QAAQ,EAACM,GAAG,CAAC;EAC3D;EAEOC,YAAYA,CAACC,EAAM;IACtB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAa,IAAI,CAACR,MAAM,GAAC,GAAG,GAACO,EAAE,CAAC;EACxD;EAEOE,SAASA,CAACF,EAAM;IACrB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAe,IAAI,CAACR,MAAM,GAAC,QAAQ,GAACO,EAAE,CAAC;EAC7D;EAEOG,gBAAgBA,CAACC,CAAM;IAC5B,IAAIJ,EAAE,GAAGK,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;IACrC,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,IAAI,CAACd,MAAM,GAAC,gBAAgB,GAACO,EAAE,EAAEI,CAAC,CAAC;EAC1D;EAEOI,iBAAiBA,CAACJ,CAAM;IAC7B,IAAIJ,EAAE,GAAGK,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;IACrC,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,IAAI,CAACd,MAAM,GAAC,iBAAiB,GAACO,EAAE,EAAEI,CAAC,CAAC;EAC3D;EAEOK,UAAUA,CAAA;IACf,OAAO,IAAI,CAACnB,IAAI,CAACW,GAAG,CAAS,IAAI,CAACV,OAAO,GAAC,OAAO,CAAC;EACpD;EAAC,QAAAmB,CAAA,G;qBApCUtB,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX3B,WAAW;IAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}