{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Attendance } from 'src/app/class/attendance';\nimport { Entry } from 'src/app/class/entry';\nexport let LogComponent = class LogComponent {\n  constructor(route, serv) {\n    this.route = route;\n    this.serv = serv;\n    this.att = new Attendance();\n    this.currentTime = '';\n    this.lastentry = null;\n  }\n  ngOnInit() {\n    let x = sessionStorage.getItem('username');\n    if (x != null && !sessionStorage.getItem('y')) {\n      document.location.reload();\n      sessionStorage.setItem('y', \"1\");\n    }\n    this.gettodaydata();\n    this.updateTime();\n    setInterval(() => this.updateTime(), 1000);\n    const delay = this.getDelayUntilEigntPM();\n    console.log(delay);\n    setTimeout(() => this.callFunction(), delay);\n  }\n  updateTime() {\n    const now = new Date();\n    this.currentTime = now.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      hour12: true\n    });\n  }\n  gettodaydata() {\n    let eid = sessionStorage.getItem('id');\n    console.log(eid);\n    this.serv.gettodaydata(eid).subscribe(data => {\n      this.att = data;\n      console.log(\"Data found\" + data);\n      let entlst = data.entrylst;\n      let x;\n      if (entlst != null) {\n        x = entlst.length;\n        console.log(entlst.length);\n      }\n      if (entlst != null && x != null) {\n        this.lastentry = entlst[x - 1].type;\n        console.log(this.lastentry);\n      }\n    });\n  }\n  callFunction() {\n    console.log('Function called at 9:00 PM');\n    this.signOut();\n  }\n  getDelayUntilEigntPM() {\n    const now = new Date();\n    const EightPM = new Date();\n    EightPM.setHours(20, 0, 0);\n    if (now.getTime() > EightPM.getTime()) {\n      EightPM.setDate(EightPM.getDate() + 1);\n    }\n    return EightPM.getTime() - now.getTime();\n  }\n  signIn() {\n    let e = new Entry();\n    e.time = this.currentTime;\n    e.type = \"Sign In\";\n    e.att = this.att;\n    console.log(e);\n    this.serv.updatesigntime(e).subscribe(data => {\n      console.log(\"signin time updated\");\n    });\n  }\n  signOut() {\n    let e = new Entry();\n    e.time = this.currentTime;\n    e.type = \"Sign Out\";\n    e.att = this.att;\n    console.log(e);\n    this.serv.updatesigntime(e).subscribe(data => {\n      console.log(\"signOut time updated\");\n    });\n  }\n  gotomyreport() {\n    let id = sessionStorage.getItem('id');\n    this.route.navigate(['myreport', id]);\n  }\n};\nLogComponent = __decorate([Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.css']\n})], LogComponent);","map":{"version":3,"names":["Component","Attendance","Entry","LogComponent","constructor","route","serv","att","currentTime","lastentry","ngOnInit","x","sessionStorage","getItem","document","location","reload","setItem","gettodaydata","updateTime","setInterval","delay","getDelayUntilEigntPM","console","log","setTimeout","callFunction","now","Date","toLocaleTimeString","hour","minute","second","hour12","eid","subscribe","data","entlst","entrylst","length","type","signOut","EightPM","setHours","getTime","setDate","getDate","signIn","e","time","updatesigntime","gotomyreport","id","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\PROFFESIONAL DOCS\\MY - Coding\\my language\\Jforce Sol\\attendanceApp\\src\\app\\comp\\log\\log.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Attendance } from 'src/app/class/attendance';\nimport { Entry } from 'src/app/class/entry';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.css']\n})\nexport class LogComponent {\n\n  public att:Attendance  = new Attendance();\n  public currentTime: any='';\n  public lastentry:any= null;\n  constructor(private route:Router,private serv:DataService){}\n\n  ngOnInit(){\n    let x =sessionStorage.getItem('username');\n    if(x!=null && !sessionStorage.getItem('y') ){\n      document.location.reload();\n     sessionStorage.setItem('y',\"1\");\n    }\n    \n    this.gettodaydata();\n\n    this.updateTime();\n    setInterval(() => this.updateTime(), 1000); \n\n    const delay = this.getDelayUntilEigntPM();\n    console.log(delay)\n    setTimeout(() => this.callFunction(), delay);\n  }\n  updateTime(): void {\n    const now = new Date();\n    this.currentTime = now.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });\n  }\n\n  gettodaydata(){\n    let eid = sessionStorage.getItem('id');\n    console.log(eid);\n      this.serv.gettodaydata(eid).subscribe(data=>{\n        this.att = data;\n        console.log(\"Data found\" + data)\n        let entlst = data.entrylst\n        let x;\n        if(entlst!=null){\n          x = entlst.length\n        console.log(entlst.length)\n        }\n        if(entlst!=null && x!=null) {\n          this.lastentry = entlst[x-1].type;\n          console.log(this.lastentry)\n        }\n        \n      })\n    }\n\n    callFunction(): void {\n      console.log('Function called at 9:00 PM');\n      this.signOut();\n    }\n  \n    getDelayUntilEigntPM() : number{\n      const now = new Date();\n      const EightPM = new Date();\n      EightPM.setHours(20, 0, 0); \n      \n      if (now.getTime() > EightPM.getTime()) {\n        EightPM.setDate(EightPM.getDate() + 1);\n      }\n      return EightPM.getTime() - now.getTime();\n    }\n\n\n  signIn(){\n    let e = new Entry();\n    e.time = this.currentTime;\n    e.type=\"Sign In\"\n    e.att=this.att;\n    console.log(e);\n    this.serv.updatesigntime(e).subscribe(data=>{\n      console.log(\"signin time updated\");\n    })\n\n  }\n  signOut(){\n    let e = new Entry();\n    e.time = this.currentTime;\n    e.type=\"Sign Out\"\n    e.att=this.att;\n    console.log(e);\n    this.serv.updatesigntime(e).subscribe(data=>{\n      console.log(\"signOut time updated\");\n    })\n  }\n\n  gotomyreport(){\n      let id =sessionStorage.getItem('id')\n    this.route.navigate(['myreport',id]);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}