{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let DataService = class DataService {\n  constructor(http) {\n    this.http = http;\n    this.userurl = \"http://localhost:8080/user\";\n    this.loginurl = \"http://localhost:8080/login\";\n    this.atturl = \"http://localhost:8080/attandence\";\n  }\n  addUser(user) {\n    return this.http.post(this.userurl + \"/add\", user);\n  }\n  login(log) {\n    return this.http.post(this.loginurl, log);\n  }\n  gettodaydata(id) {\n    return this.http.get(this.atturl + \"/\" + id);\n  }\n  getmydata(id) {\n    return this.http.get(this.atturl + \"/list/\" + id);\n  }\n  updatesignintime(x) {\n    let id = sessionStorage.getItem('id');\n    return this.http.put(this.atturl + \"/updateSignIn/\" + id, x);\n  }\n  updatesignOuttime(x) {\n    let id = sessionStorage.getItem('id');\n    return this.http.put(this.atturl + \"/updateSignOut/\" + id, x);\n  }\n  getalluser() {\n    return this.http.get(this.userurl + \"/list\");\n  }\n};\nDataService = __decorate([Injectable({\n  providedIn: 'root'\n})], DataService);","map":{"version":3,"names":["Injectable","DataService","constructor","http","userurl","loginurl","atturl","addUser","user","post","login","log","gettodaydata","id","get","getmydata","updatesignintime","x","sessionStorage","getItem","put","updatesignOuttime","getalluser","__decorate","providedIn"],"sources":["F:\\PROFFESIONAL DOCS\\MY - Coding\\my language\\Jforce Sol\\attendanceApp\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Login } from '../class/login';\nimport { Observable } from 'rxjs';\nimport { User } from '../class/user';\nimport { Err } from '../class/err';\nimport { Attendance } from '../class/attendance';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  \n  \n  private userurl:string = \"http://localhost:8080/user\";\n  private loginurl:string = \"http://localhost:8080/login\";\n  private atturl:string = \"http://localhost:8080/attandence\";\n\n  constructor(private http:HttpClient) { }\n\n  public addUser(user:any){\n      return this.http.post(this.userurl+\"/add\",user);\n  }\n\n  public login(log:Login):Observable<User | Err>{\n        return this.http.post<User |  Err>(this.loginurl,log);\n  }\n\n  gettodaydata(id:any):Observable<Attendance>{\n      return this.http.get<Attendence>(this.atturl+\"/\"+id)\n  }\n\n  getmydata(id:any):Observable<Attendence[]>{\n    return this.http.get<Attendence[]>(this.atturl+\"/list/\"+id)\n  }\n\n  updatesignintime(x: any) {\n    let id = sessionStorage.getItem('id');\n    return this.http.put(this.atturl+\"/updateSignIn/\"+id, x);\n  }\n\n  updatesignOuttime(x: any) {\n    let id = sessionStorage.getItem('id');\n    return this.http.put(this.atturl+\"/updateSignOut/\"+id, x);\n  }\n\n  getalluser():Observable<User[]> {\n    return this.http.get<User[]>(this.userurl+\"/list\")\n  }\n\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAUnC,WAAMC,WAAW,GAAjB,MAAMA,WAAW;EAOtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,OAAO,GAAU,4BAA4B;IAC7C,KAAAC,QAAQ,GAAU,6BAA6B;IAC/C,KAAAC,MAAM,GAAU,kCAAkC;EAEnB;EAEhCC,OAAOA,CAACC,IAAQ;IACnB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,OAAO,GAAC,MAAM,EAACI,IAAI,CAAC;EACnD;EAEOE,KAAKA,CAACC,GAAS;IAChB,OAAO,IAAI,CAACR,IAAI,CAACM,IAAI,CAAc,IAAI,CAACJ,QAAQ,EAACM,GAAG,CAAC;EAC3D;EAEAC,YAAYA,CAACC,EAAM;IACf,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAa,IAAI,CAACR,MAAM,GAAC,GAAG,GAACO,EAAE,CAAC;EACxD;EAEAE,SAASA,CAACF,EAAM;IACd,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAe,IAAI,CAACR,MAAM,GAAC,QAAQ,GAACO,EAAE,CAAC;EAC7D;EAEAG,gBAAgBA,CAACC,CAAM;IACrB,IAAIJ,EAAE,GAAGK,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;IACrC,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,IAAI,CAACd,MAAM,GAAC,gBAAgB,GAACO,EAAE,EAAEI,CAAC,CAAC;EAC1D;EAEAI,iBAAiBA,CAACJ,CAAM;IACtB,IAAIJ,EAAE,GAAGK,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;IACrC,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,IAAI,CAACd,MAAM,GAAC,iBAAiB,GAACO,EAAE,EAAEI,CAAC,CAAC;EAC3D;EAEAK,UAAUA,CAAA;IACR,OAAO,IAAI,CAACnB,IAAI,CAACW,GAAG,CAAS,IAAI,CAACV,OAAO,GAAC,OAAO,CAAC;EACpD;CAED;AAvCYH,WAAW,GAAAsB,UAAA,EAHvBvB,UAAU,CAAC;EACVwB,UAAU,EAAE;CACb,CAAC,C,EACWvB,WAAW,CAuCvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}